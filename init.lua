-- https://www.roblox.com/games/6938803436/Anime-Dimensions-Simulator
-- If you don't know how to use it, don't ask
return(function(BL,KL,PL,vL,oL,JM,uL,sL,yL,CL,RL,AM,jL,OL,NM,ZL,aL,IM,fL,SL,FM,HL,DL,xL,rL,mL,qL,kL,lL,QL,FL,bL,GL,LL,WL,VM,tL,iL,wL,hL,UM,pL,MM,UL,zL,XL,YL,nL,cL,DM,EL,TL,dL,gL,uM,eL,...)local N,J,A=DL,uL,FL;local u=UL;local F=jL[hL];local h=(jL[ZL]);local U=jL[QL];local V=GL;local Z,Q,G,p,v,Y,y=jL[pL],vL[YL],yL,eL,KL,iL,oL or vL[WL];local j=(dL);local I,D=TL,HL;local K=(bL);local i=(K and K()or kL);local o,W,z=rL,rL,(rL);for X_=0,2 do if not(X_<=0)then if X_==1 then W=1;else end;else o={};end;end;local d,T,H,b,L,k,r,s,X,S,C,B,f,t=rL,rL,rL,rL,rL,rL,rL,rL,rL,rL,rL,rL,rL,(rL);do for jd=0,14 do if jd<=6 then if not(jd<=2)then if not(jd<=4)then if jd==5 then k=2147483648;else r=4294967296;end;else if jd==3 then do b=function()local Iz,Wz=0,(rL);while(CL)do if not(Iz<=0)then if Iz~=1 then return Wz;else do W=W+1;end;Iz=2;end;else do Wz=F(T,W,W);end;do Iz=1;end;end;end;end;end;else L=function()local yx,Bx,Wx,vx,ax=1,rL,rL,rL,rL;repeat if not(yx<=0)then if yx~=1 then return ax*16777216+vx*65536+Wx*256+Bx;else Bx,Wx,vx,ax=F(T,W,W+3);yx=0;end;else W=W+4;yx=2;end;until(BL);end;end;end;else if jd<=0 then do T=sL;end;else if jd~=1 then T=h(u(T,5),XL,function(gy)if F(gy,2)~=72 then local XC=(rL);do for Qm=0,1 do do if Qm~=0 then if not(H)then return XC;else local Ap=(j(XC,H));do H=rL;end;return Ap;end;else XC=U(J(gy,16));end;end;end;end;else do H=J(u(gy,1,1));end;return SL;end;end);else end;end;end;else if not(jd<=10)then do if jd<=12 then if jd~=11 then B=function()local Ot,Dt=rL,(rL);for Xs=0,2 do if not(Xs<=0)then do if Xs~=1 then do return Dt*r+Ot;end;else if not(Dt>=k)then else Dt=Dt-r;end;end;end;else do Ot,Dt=L(),L();end;end;end;end;else C=function(Ro,So,lo)local qo=0;local no=(So/S[lo])%S[Ro];while(CL)do if qo==0 then no=no-no%1;do qo=1;end;else return no;end;end;end;end;else do if jd~=13 then t={[0]={[0]=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},{[0]=1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14},{[0]=2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13},{[0]=3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12},{[0]=4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11},{[0]=5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10},{[0]=6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9},{[0]=7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8},{[0]=8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7},{[0]=9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6},{[0]=10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5},{[0]=11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4},{[0]=12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3},{[0]=13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2},{[0]=14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1},{[0]=15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0}};else f=function()local MN,SN=rL,rL;local KN=(2);repeat if KN<=0 then SN=L();do KN=1;end;else if KN==1 then if not(MN==0 and SN==0)then else return 0;end;break;else do MN=L();end;KN=0;end;end;until(BL);local eN=((-1)^C(1,SN,31));local pN=C(11,SN,20);local qN=C(20,SN,0)*r+MN;KN=0;local DN=rL;while(CL)do if not(KN<=0)then if KN~=1 then return eN*(2^(pN-1023))*(qN/s+DN);else if pN==0 then do if qN~=0 then local K2=1;do while K2<=1 do if K2==0 then DN=0;K2=2;else pN=1;do K2=0;end;end;end;end;else return eN*0;end;end;elseif pN~=2047 then else if qN~=0 then do return eN*(1/0);end;else return eN*(0/0);end;end;KN=2;end;else do DN=1;end;KN=1;end;end;end;end;end;end;end;else if not(jd<=8)then if jd~=9 then do local Zi=2;do for QO=1,31 do local sO=1;while sO<2 do do if sO~=0 then S[QO]=Zi;do sO=0;end;else do Zi=Zi*2;end;sO=2;end;end;end;end;end;end;else do S={[0]=1};end;end;else do if jd~=7 then do X=r-1;end;else s=2^52;end;end;end;end;end;end;end;local q=((fL or tL));local P=(q and q[qL]or function(Sc,xc)local mc,kc,bc=4,rL,rL;do while(CL)do if not(mc<=2)then if not(mc<=3)then if mc~=4 then bc=0;mc=3;else Sc=Sc%r;mc=1;end;else do while Sc>0 and xc>0 do local Qd,dd,rd=0,rL,(rL);repeat do if not(Qd<=0)then if Qd~=1 then bc=bc+t[dd][rd]*kc;break;else rd=xc%16;Qd=2;end;else dd=Sc%16;do Qd=1;end;end;end;until(BL);Sc=(Sc-dd)/16;xc=(xc-rd)/16;kc=kc*16;end;end;do mc=2;end;end;else if not(mc<=0)then if mc==1 then xc=xc%r;mc=0;else return bc+Sc*kc+xc*kc;end;else do kc=1;end;do mc=5;end;end;end;end;end;end);local R=q and q[PL]or function(d5,J5)local e5=0;do while(CL)do do if not(e5<=0)then do if e5~=1 then J5=J5%r;e5=1;else return((d5+J5)-P(d5,J5))/2;end;end;else d5=d5%r;e5=2;end;end;end;end;end;local E=q and q[RL]or function(La,va)local ja=(1);do while(CL)do if not(ja<=0)then do if ja~=1 then return X-R(X-La,X-va);else do La=La%r;end;do ja=0;end;end;end;else va=va%r;ja=2;end;end;end;end;local a,x,l=q and q[EL]or function(QH)return X-(QH%r);end,q and q[nL],q and q[aL];x=x or function(jR,rR)local UR=1;repeat if not(UR<=0)then if UR~=1 then do return(jR*S[rR])%r;end;else if not(rR>=32)then else return 0;end;do UR=0;end;end;else if not(rR<0)then else return l(jR,-rR);end;UR=2;end;until(BL);end;local IL,c=1,rL;repeat if IL~=0 then l=l or function(xA,zA)local uA=1;local UA=rL;while(CL)do if not(uA<=1)then if uA==2 then do return UA-UA%1;end;else UA=(xA%r/S[zA]);uA=2;end;else if uA~=0 then if zA>=32 then return 0;end;uA=0;else if not(zA<0)then else return x(xA,-zA);end;do uA=3;end;end;end;end;end;IL=0;else c=function(Kq)local bq={F(T,W,W+3)};local rq=P(bq[1],d);local Lq=P(bq[2],d);local pq,kq=rL,(rL);local tq=0;repeat if not(tq<=1)then if not(tq<=2)then if tq~=3 then W=W+4;do tq=2;end;else d=(57*d+Kq)%256;tq=4;end;else return kq*16777216+pq*65536+Lq*256+rq;end;else if tq~=0 then kq=P(bq[4],d);do tq=3;end;else do pq=P(bq[3],d);end;tq=1;end;end;until(BL);end;IL=2;end;until IL==2;local O=rL;do for LT=0,1 do if LT~=0 then z=b();else do O=function(AC)local nC=(4);local sC,IC=rL,rL;do while(CL)do if not(nC<=1)then if nC<=2 then IC=SL;nC=0;else if nC==3 then W=W+sC;nC=1;else sC=L();nC=2;end;end;else if nC~=0 then do return IC;end;else for Qm=1,sC,7997 do local Wm=(Qm+7997-1);do if not(Wm>sC)then else do Wm=sC;end;end;end;local mm=rL;for Vf=0,2 do if Vf<=0 then mm={F(T,W+Qm-1,W+Wm-1)};else if Vf~=1 then IC=IC..U(y(mm));else for OS=1,#mm do mm[OS]=P(mm[OS],z);z=(AC*z+209)%256;end;end;end;end;end;nC=3;end;end;end;end;end;end;end;end;end;local g,m=rL,(rL);for NT=0,3 do if NT<=1 then if NT==0 then do d=b();end;else g={};end;else do if NT~=2 then m=function(...)return N(xL,...),{...};end;else for yE=1,b()do local tE,XE=0,(rL);repeat if not(tE<=0)then do if tE==1 then g[yE-1]=XE;tE=2;else do for OW=1,b()do local HW,vW=rL,rL;for kc=0,1 do do if kc==0 then HW=b();else do vW=(OW-1)*2;end;end;end;end;XE[vW]=C(4,HW,0);XE[vW+1]=C(4,HW,4);end;end;do tE=3;end;end;end;else XE={};tE=1;end;until tE>2;end;end;end;end;end;local w,ML=rL,(rL);do for jw=0,1 do if jw~=0 then ML=1;else w={};end;end;end;IL=1;local NL,JL,AL,VL=rL,rL,rL,rL;do while(CL)do do if not(IL<=2)then do if not(IL<=3)then if IL==4 then NL[2]=w;break;else function JL(g1,l1,M1)local u1=(l1[4]);local J1=l1[5];local B1=l1[2];local j1=(l1[7]);local C1=(l1[6]);local W1=l1[3];local V1=l1[8];local q1=(l1[1]);local A1=(G({},{[cL]=OL}));local T1=(rL);T1=function(...)local E_=({});local J_=(1);local K_=(0);local L_=((K and K()or kL));local H_=((L_==i and M1 or L_));local q_,V_=m(...);q_=q_-1;for NJ=0,q_ do do if not(V1>NJ)then do break;end;else E_[NJ]=V_[NJ+1];end;end;end;NL[3]=l1;(NL)[4]=E_;if not B1 then V_=rL;elseif not(C1)then else E_[V1]={n=q_>=V1 and q_-V1+1 or 0,y(V_,V1+1,q_+1)};end;do if H_~=L_ then do if not(LL)then kL=H_;else LL(T1,H_);end;end;end;end;local b_,m_,w_,N_=A(function()while true do local XC=(J1[J_]);local sC=XC[4];do J_=J_+1;end;if not(sC>=64)then if not(sC<32)then if sC>=48 then do if not(sC<56)then if not(sC<60)then do if not(sC>=62)then if sC~=61 then(E_)[XC[7]]=x(E_[XC[9]],E_[XC[8]]);else E_[XC[7]][XC[6]]=E_[XC[8]];end;else if sC==63 then E_[XC[7]]=XC[6]<=XC[1];else(E_)[XC[7]]=E_[XC[9]]^XC[1];end;end;end;else if not(sC>=58)then if sC==57 then do(E_)[XC[7]]=H_[XC[5]];end;else local s6,Z6=XC[7],(XC[8]-1)*50;do for AU=1,K_-s6 do do(E_[s6])[Z6+AU]=E_[s6+AU];end;end;end;end;else do if sC==59 then local ce=E_[XC[9]];if not(not ce)then E_[XC[7]]=ce;else J_=J_+1;end;else E_[XC[7]]=E_[XC[9]]<=XC[1];end;end;end;end;else if not(sC<52)then if not(sC<54)then do if sC~=55 then do if not(XC[6]<E_[XC[8]])then else J_=J_+1;end;end;else E_[XC[7]]=E_[XC[9]]>=E_[XC[8]];end;end;else if sC~=53 then local HW=XC[7];K_=HW+XC[9]-1;E_[HW]=E_[HW](y(E_,HW+1,K_));do K_=HW;end;else do if not(not(E_[XC[9]]<=E_[XC[8]]))then else do J_=J_+1;end;end;end;end;end;else if not(sC>=50)then if sC==49 then local PV,FV,eV=XC[7],XC[9],(XC[8]);if FV==0 then else K_=PV+FV-1;end;local vV,NV=nil,nil;if FV==1 then vV,NV=m(E_[PV]());else vV,NV=m(E_[PV](y(E_,PV+1,K_)));end;if eV==1 then K_=PV-1;else do if eV==0 then vV=vV+PV-1;K_=vV;else vV=PV+eV-2;K_=vV+1;end;end;local uo=(0);do for q2=PV,vV do uo=uo+1;do E_[q2]=NV[uo];end;end;end;end;else do E_[XC[7]]=E_[XC[9]]^E_[XC[8]];end;end;else if sC==51 then local K7=(XC[9]);local R7=(E_[K7]);for av=K7+1,XC[8]do R7=R7..E_[av];end;do(E_)[XC[7]]=R7;end;else(E_)[XC[7]]=XC[6]>=E_[XC[8]];end;end;end;end;end;else if not(sC>=40)then if not(sC<36)then do if sC<38 then do if sC~=37 then if E_[XC[9]]~=E_[XC[8]]then else J_=J_+1;end;else(E_)[XC[7]]=false;end;end;else do if sC==39 then do(E_[XC[7]])[E_[XC[9]]]=E_[XC[8]];end;else E_[XC[7]]=E_[XC[9]]~=E_[XC[8]];end;end;end;end;else if not(sC>=34)then do if sC~=33 then E_[XC[7]]=E(E_[XC[9]],XC[1]);else repeat local sQ,NQ=A1,E_;if#sQ>0 then local Xw=({});for Wb,Fb in Y,sQ do do for p4,U4 in Y,Fb do if not(U4[1]==NQ and U4[2]>=0)then else local ue=U4[2];do if not(not Xw[ue])then else Xw[ue]={NQ[ue]};end;end;do(U4)[1]=Xw[ue];end;U4[2]=1;end;end;end;end;end;until true;do return;end;end;end;else if sC==35 then do E_[XC[7]]=l(XC[6],XC[1]);end;else local QG=XC[7];(E_)[QG]=E_[QG](y(E_,QG+1,K_));do K_=QG;end;end;end;end;else do if not(sC>=44)then if not(sC>=42)then if sC~=41 then E_[XC[7]]=XC[6]<E_[XC[8]];else local oO=(XC[7]);K_=oO+XC[9]-1;E_[oO](y(E_,oO+1,K_));K_=oO-1;end;else do if sC~=43 then do if XC[6]==XC[1]then else J_=J_+1;end;end;else local Pw=(nil);local mw=(u1[XC[2]]);local lw=mw[9];do if not(lw>0)then else Pw={};for ZD=0,lw-1 do local ND=(J1[J_]);local qD=ND[4];do if qD==79 then do Pw[ZD]={E_,ND[9]};end;else Pw[ZD]=g1[ND[9]];end;end;J_=J_+1;end;(Q)(A1,Pw);end;end;(E_)[XC[7]]=JL(Pw,mw,H_);end;end;end;else if not(sC>=46)then if sC==45 then E_[XC[7]]=NL[XC[9]];else local qy=(XC[7]);local py=E_[qy+2];local Ry=(E_[qy]+py);(E_)[qy]=Ry;if not(py>0)then if not(Ry>=E_[qy+1])then else J_=XC[2];(E_)[qy+3]=Ry;end;else if not(Ry<=E_[qy+1])then else J_=XC[2];(E_)[qy+3]=Ry;end;end;end;else if sC==47 then do E_[XC[7]]=l(XC[6],E_[XC[8]]);end;else E_[XC[7]]=R(E_[XC[9]],XC[1]);end;end;end;end;end;end;else do if not(sC<16)then if not(sC<24)then if not(sC<28)then if sC>=30 then if sC==31 then(E_)[XC[7]]=E_[XC[9]]==E_[XC[8]];else do E_[XC[7]]=R(XC[6],XC[1]);end;end;else if sC==29 then if XC[8]~=23 then do(E_)[XC[7]]=#E_[XC[9]];end;else J_=J_-1;(J1)[J_]={[4]=19,[9]=(XC[9]-UM)%256,[7]=(XC[7]-109)%256};end;else E_[XC[7]]=XC[6]^E_[XC[8]];end;end;else do if not(sC<26)then if sC==27 then if XC[8]==54 then do J_=J_-1;end;(J1)[J_]={[7]=(XC[7]-249)%256,[4]=23,[9]=(XC[9]-249)%256};elseif XC[8]~=185 then(E_)[XC[7]]=not E_[XC[9]];else J_=J_-1;(J1)[J_]={[4]=67,[7]=(XC[7]-76)%256,[8]=(XC[9]-76)%256};end;else(E_)[XC[7]]=E(XC[6],E_[XC[8]]);end;else if sC==25 then(E_)[XC[7]]=E_[XC[9]]%XC[1];else E_[XC[7]]=E_[XC[9]]==XC[1];end;end;end;end;else if not(sC>=20)then if not(sC>=18)then do if sC~=17 then(E_)[XC[7]]=R(XC[6],E_[XC[8]]);else local bv=(XC[7]);E_[bv](y(E_,bv+1,K_));K_=bv-1;end;end;else if sC==19 then if XC[8]~=58 then repeat local gQ,wQ=A1,E_;if not(#gQ>0)then else local V0={};for M4,o4 in Y,gQ do for ed,Vd in Y,o4 do if not(Vd[1]==wQ and Vd[2]>=0)then else local lc=Vd[2];if not(not V0[lc])then else V0[lc]={wQ[lc]};end;(Vd)[1]=V0[lc];do(Vd)[2]=1;end;end;end;end;end;until CL;local nO=XC[7];return BL,nO,nO+XC[9]-2;else J_=J_-1;(J1)[J_]={[4]=33,[7]=(XC[7]-84)%256,[9]=(XC[9]-84)%wL};end;else(E_)[XC[7]]=CL;end;end;else if not(sC<22)then do if sC==23 then do if XC[8]~=69 then for R6=XC[7],XC[9]do(E_)[R6]=rL;end;else do J_=J_-1;end;J1[J_]={[4]=33,[7]=(XC[7]-207)%256,[9]=(XC[9]-207)%256};end;end;else(E_)[XC[7]]=XC[6]^XC[1];end;end;else if sC~=21 then do if not(E_[XC[9]]<=XC[1])then else J_=J_+1;end;end;else do if XC[9]==uM then J_=J_-1;(J1)[J_]={[9]=(XC[8]-FM)%256,[4]=19,[7]=(XC[7]-FM)%256};elseif XC[9]~=171 then if not(not E_[XC[7]])then else do J_=J_+1;end;end;else J_=J_-1;do(J1)[J_]={[4]=gL,[8]=(XC[8]-227)%256,[7]=(XC[7]-227)%256};end;end;end;end;end;end;end;else do if not(sC>=8)then if not(sC>=4)then if not(sC>=2)then do if sC==1 then do if not(not(E_[XC[9]]<XC[1]))then else J_=J_+1;end;end;else local lg=XC[7];local Eg=(lg+1);local Vg=lg+2;(E_)[lg]=zL(J(E_[lg]),VM);E_[Eg]=zL(J(E_[Eg]),IM);(E_)[Vg]=zL(J(E_[Vg]),DM);E_[lg]=E_[lg]-E_[Vg];J_=XC[2];end;end;else if sC~=3 then if E_[XC[9]]~=XC[1]then else J_=J_+1;end;else(NL)[XC[9]]=E_[XC[7]];end;end;else if not(sC<6)then if sC~=7 then local fG=XC[6]/XC[1];E_[XC[7]]=fG-fG%1;else if XC[8]~=204 then repeat local WU,oU=A1,(E_);if not(#WU>0)then else local bE=({});for vV,ZV in Y,WU do do for UJ,BJ in Y,ZV do if not(BJ[1]==oU and BJ[2]>=0)then else local Lv=(BJ[2]);do if not(not bE[Lv])then else bE[Lv]={oU[Lv]};end;end;do(BJ)[1]=bE[Lv];end;(BJ)[2]=1;end;end;end;end;end;until CL;return BL,XC[7],K_;else J_=J_-1;do J1[J_]={[7]=(XC[7]-210)%256,[4]=126,[9]=(XC[9]-210)%256};end;end;end;else if sC==5 then if E_[XC[9]]==XC[1]then else J_=J_+1;end;else(E_)[XC[7]]=x(E_[XC[9]],XC[1]);end;end;end;else if not(sC<12)then if not(sC<14)then if sC==15 then do E_[XC[7]][E_[XC[9]]]=XC[1];end;else do E_[XC[7]]=XC[5];end;end;else if sC~=13 then J_=XC[2];else(E_)[XC[7]]=-E_[XC[9]];end;end;else if not(sC>=10)then do if sC==9 then if E_[XC[9]]==E_[XC[8]]then else J_=J_+1;end;else do(E_)[XC[7]]=E_[XC[9]]>E_[XC[8]];end;end;end;else if sC==11 then(E_)[XC[7]]=E(E_[XC[9]],E_[XC[8]]);else do E_[XC[7]]=XC[6]*E_[XC[8]];end;end;end;end;end;end;end;end;end;else if not(sC>=96)then do if not(sC<80)then if sC<88 then if not(sC>=84)then do if not(sC<82)then if sC~=83 then(E_)[XC[7]]=a(E_[XC[9]]);else(E_)[XC[7]]=E_[XC[9]]/E_[XC[8]];end;else if sC~=81 then local Fi,Oi=XC[7],(XC[8]-1)*50;for yT=1,XC[9]do(E_[Fi])[Oi+yT]=E_[Fi+yT];end;else do(E_)[XC[7]]=P(E_[XC[9]],E_[XC[8]]);end;end;end;end;else if not(sC>=86)then if sC~=85 then(E_)[XC[7]]=E_[XC[9]]/XC[1];else local zr=(g1[XC[9]]);(E_)[XC[7]]=zr[1][zr[2]];end;else do if sC==87 then(E_)[XC[7]]=E_[XC[9]]~=XC[1];else E_[XC[7]]={y({},1,XC[9])};end;end;end;end;else if sC>=92 then do if sC<94 then if sC~=93 then(E_)[XC[7]]=XC[6]-E_[XC[8]];else(E_)[XC[7]]=l(E_[XC[9]],XC[1]);end;else do if sC==95 then K_=XC[7];(E_[K_])();K_=K_-1;else local Zs=(XC[9]);E_[XC[7]]=E_[Zs]..E_[Zs+1];end;end;end;end;else do if not(sC>=90)then if sC==89 then(E_)[XC[7]]=E_[XC[9]][XC[1]];else(E_)[XC[7]]=XC[6]>E_[XC[8]];end;else if sC==91 then K_=XC[7];do(E_)[K_]=E_[K_]();end;else(E_)[XC[7]]=XC[6]-XC[1];end;end;end;end;end;else do if not(sC<72)then if not(sC<76)then if not(sC>=78)then if sC==77 then(E_)[XC[7]]=XC[5];else E_[XC[7]]=XC[6]%XC[1];end;else if sC==79 then(E_)[XC[7]]=E_[XC[9]];else if not(not(XC[6]<XC[1]))then else J_=J_+1;end;end;end;else if sC<74 then if sC==73 then E_[XC[7]]=XC[6]>=XC[1];else local GY=(XC[7]);E_[GY](E_[GY+1],E_[GY+2]);do K_=GY-1;end;end;else if sC~=75 then local Aa,ma=XC[7],XC[9];K_=Aa+ma-1;repeat local HE,pE=A1,(E_);if not(#HE>0)then else local yE=({});for rl,Rl in Y,HE do for ja,ua in Y,Rl do if not(ua[1]==pE and ua[2]>=0)then else local Ic=ua[2];if not(not yE[Ic])then else do(yE)[Ic]={pE[Ic]};end;end;ua[1]=yE[Ic];ua[2]=1;end;end;end;end;until CL;do return CL,Aa,ma;end;else(E_)[XC[7]]=E_[XC[9]]<E_[XC[8]];end;end;end;else if not(sC>=68)then do if not(sC>=66)then do if sC~=65 then do(E_)[XC[7]]=XC[6]+XC[1];end;else if XC[8]==AM then J_=J_-1;do(J1)[J_]={[4]=7,[9]=(XC[9]-177)%256,[7]=(XC[7]-177)%256};end;elseif XC[8]==109 then J_=J_-1;do J1[J_]={[7]=(XC[7]-147)%256,[8]=(XC[9]-147)%256,[4]=124};end;else repeat local iu,Iu,qu=A1,E_,XC[7];if not(#iu>0)then else local X_=({});for ew,Fw in Y,iu do for Jx,bx in Y,Fw do if not(bx[1]==Iu and bx[2]>=qu)then else local f2=(bx[2]);if not X_[f2]then(X_)[f2]={Iu[f2]};end;(bx)[1]=X_[f2];bx[2]=1;end;end;end;end;until CL;end;end;end;else if sC~=67 then(E_)[XC[7]]=E_[XC[9]]+E_[XC[8]];else do if not(E_[XC[7]])then else J_=J_+1;end;end;end;end;end;else do if not(sC<70)then do if sC~=71 then(E_)[XC[7]]=E_[XC[9]]>=XC[1];else if XC[8]~=184 then local IE=XC[7];for Je=IE,IE+(XC[9]-1)do do E_[Je]=V_[V1+(Je-IE)+1];end;end;else J_=J_-1;J1[J_]={[7]=(XC[7]-229)%256,[4]=21,[8]=(XC[9]-229)%256};end;end;end;else if sC~=69 then if XC[6]==E_[XC[8]]then else do J_=J_+1;end;end;else do E_[XC[7]]={};end;end;end;end;end;end;end;end;end;else do if not(sC>=112)then if not(sC>=104)then if not(sC>=100)then if not(sC>=98)then if sC==97 then(E_)[XC[7]]=E_[XC[9]]>XC[1];else local fe,Be=XC[7],E_[XC[9]];do(E_)[fe+1]=Be;end;E_[fe]=Be[XC[1]];end;else if sC~=99 then E_[XC[7]]=XC[6]==XC[1];else local EZ=XC[6]/E_[XC[8]];do E_[XC[7]]=EZ-EZ%1;end;end;end;else do if not(sC>=102)then do if sC==101 then E_[XC[7]]=XC[6]<=E_[XC[8]];else do E_[XC[7]]=E_[XC[9]]-E_[XC[8]];end;end;end;else do if sC~=103 then(H_)[XC[5]]=E_[XC[7]];else E_[XC[7]]=CL;J_=J_+1;end;end;end;end;end;else if not(sC<108)then if sC<110 then if sC~=109 then local at=(XC[7]);E_[at]=E_[at](E_[at+1],E_[at+2]);K_=at;else E_[XC[7]]=P(XC[6],XC[1]);end;else do if sC~=111 then E_[XC[7]]=E_[XC[9]][E_[XC[8]]];else if not(not(XC[6]<E_[XC[8]]))then else J_=J_+1;end;end;end;end;else if sC<106 then if sC==105 then(E_)[XC[7]]=XC[6]<XC[1];else local vC=XC[7];do E_[vC]=E_[vC](E_[vC+1]);end;K_=vC;end;else do if sC~=107 then E_[XC[7]]=x(XC[6],E_[XC[8]]);else do E_[XC[7]][XC[6]]=XC[1];end;end;end;end;end;end;else if not(sC>=120)then if not(sC>=116)then if not(sC<NM)then do if sC~=JM then E_[XC[7]]=E_[XC[9]]*E_[XC[8]];else local ts=g1[XC[9]];(ts[1])[ts[2]]=E_[XC[7]];end;end;else if sC~=113 then do(E_)[XC[7]]=R(E_[XC[9]],E_[XC[8]]);end;else do(E_)[XC[7]]=E_[XC[9]]-XC[1];end;end;end;else if not(sC>=118)then if sC~=117 then(E_)[XC[7]]=E_[XC[9]]<XC[1];else E_[XC[7]]=XC[6]*XC[1];end;else if sC==119 then do E_[XC[7]]=E_[XC[9]]<=E_[XC[8]];end;else(E_)[XC[7]]=E_[XC[9]]%E_[XC[8]];end;end;end;else if not(sC>=gL)then if not(sC<MM)then do if sC~=123 then repeat local W3,s3=A1,E_;if not(#W3>0)then else local f6=({});for EB,FB in Y,W3 do for B_,e_ in Y,FB do if not(e_[1]==s3 and e_[2]>=0)then else local Cy=(e_[2]);if not(not f6[Cy])then else(f6)[Cy]={s3[Cy]};end;do e_[1]=f6[Cy];end;e_[2]=1;end;end;end;end;until CL;return CL,XC[7],1;else local QP=(XC[7]);(E_[QP])(E_[QP+1]);K_=QP-1;end;end;else if sC~=121 then if XC[8]~=NM then local FU,EU=XC[7],q_-V1;do if not(EU<0)then else do EU=-1;end;end;end;for RU=FU,FU+EU do(E_)[RU]=V_[V1+(RU-FU)+1];end;K_=FU+EU;else J_=J_-1;(J1)[J_]={[4]=29,[9]=(XC[9]-202)%256,[7]=(XC[7]-202)%256};end;else(E_)[XC[7]]=E_[XC[9]]*XC[1];end;end;else if not(sC>=126)then do if sC==125 then if XC[8]==220 then J_=J_-1;(J1)[J_]={[7]=(XC[7]-36)%256,[4]=13,[9]=(XC[9]-36)%256};elseif XC[8]~=126 then E_[XC[7]]=V_[V1+1];else J_=J_-1;do(J1)[J_]={[8]=(XC[9]-21)%wL,[4]=67,[7]=(XC[7]-21)%wL};end;end;else do if XC[9]==127 then J_=J_-1;J1[J_]={[7]=(XC[7]-224)%256,[9]=(XC[8]-mL)%256,[4]=120};elseif XC[9]~=29 then local qV=(XC[7]);local sV=qV+2;local LV=qV+3;local yV=({E_[qV](E_[qV+1],E_[sV])});for Y5=1,XC[8]do E_[sV+Y5]=yV[Y5];end;local iV=(E_[LV]);do if iV==rL then do J_=J_+1;end;else E_[sV]=iV;end;end;else J_=J_-1;J1[J_]={[7]=(XC[7]-171)%256,[9]=(XC[8]-171)%256,[4]=29};end;end;end;end;else if not(sC>=127)then(E_)[XC[7]]=rL;else if sC==128 then E_[XC[7]]=x(XC[6],XC[1]);else repeat local wr,Vr=A1,E_;do if not(#wr>0)then else local jA={};do for l0,e0 in Y,wr do for NY,UY in Y,e0 do do if not(UY[1]==Vr and UY[2]>=0)then else local j8=(UY[2]);if not(not jA[j8])then else(jA)[j8]={Vr[j8]};end;do UY[1]=jA[j8];end;do(UY)[2]=1;end;end;end;end;end;end;end;end;until CL;return CL,XC[7],0;end;end;end;end;end;end;end;end;end;end;end);do if not(b_)then if V(m_)~="string"then(D)(m_,0);else do if not(Z(m_,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(Z(m_,"^.-:%d+: "))then(D)(m_,0);else D("Luraph Script:"..(j1[J_-1]or"(internal)")..": "..I(m_),0);end;end;else if m_ then if N_==1 then return E_[w_]();else do return E_[w_](y(E_,w_+1,K_));end;end;elseif not(w_)then else return y(E_,w_,N_);end;end;end;end;if not(LL)then else LL(T1,M1);end;return T1;end;do IL=0;end;end;else IL=5;end;end;else do if IL<=0 then function AL()local yw,Bw,Qw,Kw=rL,rL,rL,(rL);local ew={rL,rL,rL,{},{},rL,{},rL,rL};do for Pq=0,4 do if Pq<=1 then do if Pq~=0 then Bw={};else yw={};end;end;else if not(Pq<=2)then if Pq~=3 then Kw=L()-133725;else ew[14]=b();end;else Qw=1;end;end;end;end;local aw=6;local iw,Tw,mw,Vw,xw=rL,rL,rL,rL,(rL);while(CL)do if not(aw<=4)then do if not(aw<=7)then if not(aw<=8)then if aw~=9 then for Di=1,Kw do local Qi,Ji=rL,(rL);local Ni=0;while Ni<=1 do if Ni~=0 then Ji=b();Ni=2;else Ni=1;end;end;Ni=2;do while Ni<5 do do if not(Ni<=1)then if not(Ni<=2)then if Ni~=3 then do if Ji==73 then Qi=f();elseif Ji==204 then Qi=u(O(iw),6);elseif Ji==201 then Qi=u(O(iw),L());elseif Ji==lL then Qi=u(O(iw),L());elseif Ji==20 then Qi=u(O(iw),5);elseif Ji==191 then Qi=CL;elseif Ji==99 then Qi=B();elseif Ji==18 then Qi=BL;elseif Ji~=38 then else Qi=f();end;end;Ni=1;else if Ji==73 then Qi=f();elseif Ji==204 then do Qi=u(O(iw),6);end;elseif Ji==201 then do Qi=u(O(iw),L());end;elseif Ji==161 then Qi=u(O(iw),L());elseif Ji==20 then Qi=u(O(iw),5);elseif Ji==191 then do Qi=CL;end;elseif Ji==99 then Qi=B();elseif Ji==18 then Qi=BL;elseif Ji~=38 then else Qi=f();end;Ni=3;end;else if Ji==73 then Qi=f();elseif Ji==204 then Qi=u(O(iw),6);elseif Ji==201 then do Qi=u(O(iw),L());end;elseif Ji==161 then Qi=u(O(iw),L());elseif Ji==20 then Qi=u(O(iw),5);elseif Ji==191 then Qi=CL;elseif Ji==99 then Qi=B();elseif Ji==18 then Qi=BL;elseif Ji==38 then Qi=f();end;Ni=5;end;else if Ni~=0 then if Ji==73 then Qi=f();elseif Ji==204 then do Qi=u(O(iw),6);end;elseif Ji==201 then Qi=u(O(iw),L());elseif Ji==161 then Qi=u(O(iw),L());elseif Ji==20 then Qi=u(O(iw),5);elseif Ji==191 then Qi=CL;elseif Ji==99 then Qi=B();elseif Ji==18 then Qi=BL;elseif Ji==38 then Qi=f();end;do Ni=0;end;else do if Ji==73 then Qi=f();elseif Ji==204 then do Qi=u(O(iw),6);end;elseif Ji==201 then do Qi=u(O(iw),L());end;elseif Ji==161 then Qi=u(O(iw),L());elseif Ji==20 then Qi=u(O(iw),5);elseif Ji==191 then Qi=CL;elseif Ji==99 then Qi=B();elseif Ji==18 then Qi=BL;elseif Ji~=38 then else do Qi=f();end;end;end;do Ni=4;end;end;end;end;end;end;do yw[Di-1]=Qw;end;local Li={Qi,{}};(Bw)[Qw]=Li;Qw=Qw+1;if not(Tw)then else(w)[ML]=Li;ML=ML+1;end;end;aw=4;else do ew[18]=b();end;aw=1;end;else do(ew)[2]=C(1,xw,1)~=0;end;do aw=5;end;end;else do if not(aw<=5)then if aw~=6 then Tw=b()~=0;aw=10;else iw=b();aw=7;end;else(ew)[6]=C(1,xw,2)~=0;do break;end;end;end;end;end;else if not(aw<=1)then if not(aw<=2)then if aw~=3 then ew[11]=L();aw=9;else xw=b();aw=8;end;else do for iO=1,mw do local AO,MO,kO=0,rL,rL;repeat do if AO~=0 then do kO=c(Vw);end;AO=2;else MO={rL,rL,rL,rL,rL,rL,rL,rL,rL,rL};AO=1;end;end;until AO>1;AO=10;while AO<=11 do if not(AO<=5)then do if not(AO<=8)then if AO<=9 then MO[13]=C(14,kO,11);AO=10;else if AO~=10 then do MO[13]=C(14,kO,11);end;do AO=6;end;else MO[2]=C(18,kO,14);AO=11;end;end;else if not(AO<=6)then if AO~=7 then MO[4]=b();do AO=2;end;else do MO[2]=C(18,kO,14);end;AO=6;end;else MO[9]=C(9,kO,14);AO=4;end;end;end;else if not(AO<=2)then if not(AO<=3)then if AO~=4 then(MO)[13]=C(14,kO,11);do AO=6;end;else(MO)[7]=C(8,kO,6);AO=3;end;else MO[8]=C(9,kO,23);do AO=8;end;end;else if not(AO<=0)then if AO~=1 then(MO)[12]=C(7,kO,18);AO=1;else do(MO)[18]=C(1,kO,31);end;AO=12;end;else MO[12]=C(7,kO,18);do AO=1;end;end;end;end;end;ew[5][iO]=MO;end;end;aw=3;end;else if aw~=0 then mw=L()-133787;aw=0;else Vw=b();aw=2;end;end;end;end;do aw=2;end;local dw=(rL);while aw<4 do if not(aw<=1)then if aw~=2 then for Qi=1,dw do local Ai,vi=rL,rL;local bi=1;repeat if bi~=0 then Ai=L();do bi=0;end;else do vi=L();end;bi=2;end;until bi==2;bi=0;local ji=rL;repeat if bi==0 then ji=L();bi=1;else do for eY=Ai,vi do ew[7][eY]=ji;end;end;bi=2;end;until bi>=2;end;aw=1;else dw=L();aw=3;end;else if aw~=0 then(ew)[1]=b();aw=0;else do(ew)[8]=b();end;aw=4;end;end;end;local Ww=(rL);for i9=0,3 do do if i9<=1 then if i9~=0 then for JT=1,Ww do(ew[4])[JT-1]=AL();end;else Ww=L();end;else do if i9~=2 then(ew)[9]=b();else(ew)[15]=L();end;end;end;end;end;do for IN=0,2 do if not(IN<=0)then if IN~=1 then(ew)[3]=b();else(ew)[19]=b();end;else ew[13]=L();end;end;end;local Cw=g[ew[3]];aw=0;while(CL)do if aw~=0 then return ew;else for Do=1,mw do local Go,Yo,ro,po=0,rL,rL,rL;repeat do if not(Go<=2)then if not(Go<=4)then if Go~=5 then if not((ro==9 or po)and Yo[8]>255)then else do Yo[10]=CL;end;local Td,Hd,Ed=1,rL,(rL);do while Td<=2 do do if not(Td<=0)then if Td==1 then do Hd=yw[Yo[8]-256];end;do Td=2;end;else Ed=Bw[Hd];Td=0;end;else if not(Ed)then else local sy=1;local Hy=(rL);repeat do if not(sy<=0)then if sy~=1 then Hy=Ed[2];do sy=0;end;else(Yo)[1]=Ed[1];sy=2;end;else Hy[#Hy+1]={Yo,1};sy=3;end;end;until sy>=3;end;Td=3;end;end;end;end;end;break;else ro=Cw[Yo[4]];Go=3;end;else do if Go~=3 then if ro~=6 then else do Yo[2]=Do+(Yo[2]-131071)+1;end;end;Go=6;else po=ro==4;Go=1;end;end;end;else if Go<=0 then Yo=ew[5][Do];Go=5;else do if Go==1 then if not((ro==2 or po)and Yo[9]>255)then else local jB=rL;local WB=1;repeat if WB~=0 then do(Yo)[3]=CL;end;WB=0;else jB=yw[Yo[9]-256];do WB=2;end;end;until WB>1;local zB=(Bw[jB]);if not(zB)then else local wl,rl=0,(rL);while wl~=3 do if not(wl<=0)then if wl~=1 then rl=zB[2];wl=1;else do(rl)[#rl+1]={Yo,6};end;wl=3;end;else do Yo[6]=zB[1];end;wl=2;end;end;end;end;Go=2;else if ro~=3 then else local z9=(yw[Yo[2]]);local r9=(Bw[z9]);if not(r9)then else local QC,ZC=2,(rL);do repeat do if not(QC<=0)then if QC==1 then(ZC)[#ZC+1]={Yo,5};QC=3;else Yo[5]=r9[1];QC=0;end;else ZC=r9[2];QC=1;end;end;until QC>2;end;end;end;Go=4;end;end;end;end;end;until(BL);end;aw=1;end;end;end;do IL=2;end;else if IL~=1 then VL=AL();IL=4;else do NL={};end;IL=3;end;end;end;end;end;end;end;for yN=0,1 do if yN~=0 then return JL(rL,VL,i)(...);else w=rL;end;end;end)(false,rawset,"\98\97\110\100",table,unpack,115,tonumber,"LPH}",setmetatable,true,"\98\111\114",195,string,"\118",114,"\103\115\117\98","\114\115\104\105\102\116","\96\102\111\114\96\32\108\105\109\105\116\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",bit,"",128,error,select,"\35",nil,224,"\98\120\111\114",_ENV,161,"\99\104\97\114",pcall,getfenv,type,setfenv,"\117\110\112\97\99\107","\96\102\111\114\96\32\105\110\105\116\105\97\108\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",bit32,next,256,"\98\121\116\101",109,"\109\97\116\99\104",122,string.sub,assert,"\46\46","\105\110\115\101\114\116","\108\115\104\105\102\116","\95\95\109\111\100\101","\96\102\111\114\96\32\115\116\101\112\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114","\98\110\111\116",tostring,string.rep,124,212,rawget,...);
